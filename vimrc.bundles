" Install vim-plug if missing
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  augroup VimPlugAutoInstall
    autocmd!
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
  augroup END
endif

call plug#begin('~/.vim/bundle')

" Dependencies: {{{
  " Vim Web API (required by gist-vim)
  Plug 'mattn/webapi-vim'

  " fzf greatness (fuzzy finding)
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --bin' }
  Plug 'junegunn/fzf.vim'
" }}}

" Snippets: {{{
  " ES2015 code snippets (Optional)
  Plug 'epilande/vim-es2015-snippets', { 'for': ['javascript', 'javascript.jsx'] }

  " React code snippets
  Plug 'epilande/vim-react-snippets', { 'for': ['javascript', 'javascript.jsx'] }

  " vim snippets for UltiSnips ...
  if has('nvim')
    Plug 'honza/vim-snippets'
  endif

  " modern snippets for vim
  Plug 'SirVer/ultisnips'

  " neosnippet snippets
  Plug 'Shougo/neosnippet'
  Plug 'Shougo/neosnippet-snippets'
" }}}

" JavaScript: {{{
  " JavaScript support (required by vim-jsx)
  Plug 'pangloss/vim-javascript'

  " React:
    " JSX support for react components
    Plug 'mxw/vim-jsx'

    " A Vim plugin that provides functions that modify React source files 
    Plug 'mvolkmann/vim-react', { 'for': 'javascript.jsx' }

    " extract partial render, rename tag, select self close tags
    Plug 'samuelsimoes/vim-jsx-utils', { 'for': 'javascript.jsx' }

  " JSON manipulation
  Plug 'tpope/vim-jdaddy', { 'for': 'json' }

  " syntax highlighting for styled components
  Plug 'styled-components/vim-styled-components', { 'branch': 'main', 'for': 'javascript.jsx' }
" }}}

" TypeScript: {{{
Plug 'leafgarland/typescript-vim'
Plug 'ianks/vim-tsx'
"}}}

" MDX (Gatsby Markdown with React) {{{
  Plug 'jxnblk/vim-mdx-js'
" }}}

" Elm: {{{
  " elm editing and compilation in vim
  Plug 'ElmCast/elm-vim'
" }}}

" Postgres: {{{
  " postgres sql highlighting
  Plug 'exu/pgsql.vim'

  " show table description in vim
  Plug 'hashrocket/vim-hr-psql', { 'on': 'Pgtable' }
" }}}

" Terraform: {{{
  " terraform syntax
  Plug 'hashivim/vim-terraform' 
" }}}

" Docker {{{
Plug 'ekalinin/Dockerfile.vim', {'for' : 'Dockerfile'}
" }}}

" Ansible: {{{
  " ansible vim plugin
  Plug 'pearofducks/ansible-vim'
" }}}

" Caddy: {{{
  " syntax highlighting for caddyfile
  Plug 'isobit/vim-caddyfile', { 'for': 'Caddyfile' }
" }}}

" GITHUB: {{{
  " Vim GitHub gist integration
  Plug 'mattn/gist-vim', { 'on': 'Gist' }
" }}}

" Crystal: {{{
  Plug 'rhysd/vim-crystal'
" }}}

" Haskell: {{{
  Plug 'neovimhaskell/haskell-vim', { 'for': 'haskell' }
" }}}

" Swift: {{{
  Plug 'keith/swift.vim', { 'for': 'swift' }
" }}}

" Golang: {{{
  Plug 'fatih/vim-go', { 'for': 'go' }
" }}}

" CSS/SCSS {{{
  " up to date CSS3 syntax highlighting
  Plug 'hail2u/vim-css3-syntax'

  " css language server
  Plug 'vscode-langservers/vscode-css-languageserver-bin'
" }}}

" VimScript: {{{
  " vim plugin for writing vim plugins
  Plug 'tpope/vim-scriptease'
"}}}

" Format+Lint: {{{
  " staticly check code and highlight errors (async syntastic replacement)
  Plug 'dense-analysis/ale'

  " temporarily use this plugin to format elixir - until ALE starts supporting
  " umbrella apps and respect nested .formatter.exs files (see
  " https://github.com/dense-analysis/ale/pull/3106)
  Plug 'mhinz/vim-mix-format'
" }}}

" Other: {{{

  " log file syntax
  Plug 'yyq123/vim-syntax-logfile'

"}}}

" ==================================================

if filereadable(expand('~/.vimrc.bundles.local'))
  source ~/.vimrc.bundles.local
endif

call plug#end()
